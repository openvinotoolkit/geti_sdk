name: Record and push VCR cassettes

on:
  workflow_dispatch:  # run on request (no need for PR)
  pull_request:
    branches:
      - main
    types:
      - labeled

env:
  GETI_USERNAME: ${{ secrets.GETI_USERNAME }}
  GETI_PASSWORD: ${{ secrets.GETI_PASSWORD }}
  # Python version
  PYTHON_VERSION: "3.10"

  # Other environment variables used in the tests
  TEST_TARGET: "tests/pre-merge/integration"
  TEST_MODE: "RECORD"
  REPORT_DIRECTORY: reports
  VIRTUALENV_DIRECTORY: .venv

permissions:
  contents: read


jobs:
  recording_integration_tests:

    permissions:
      contents: write
      pull-requests: write

    runs-on: [self-hosted, sdk-runner]

    steps:
      - id: label-the-PR
        if: github.event_name == 'pull_request'
        uses: actions/labeler@v5

      - name: Smart CI
        if: github.event_name == 'pull_request'
        run: |
          export TEST_TARGET=""
          if [[ ${{ contains(steps.label-the-PR.outputs.all-labels, 'SDK-Core') }} ]]; then
            export TEST_TARGET="tests/pre-merge/integration/test_geti.py $TEST_TARGET"
          fi
          if [[ ${{ contains(steps.label-the-PR.outputs.all-labels, 'Rest-Clients') }} ]]; then
            export TEST_TARGET="tests/pre-merge/integration/rest_clients/ $TEST_TARGET"
          fi
          if [[ ${{ contains(steps.label-the-PR.outputs.all-labels, 'HTTP-Session') }} ]]; then
            export TEST_TARGET="tests/pre-merge/integration/http_session/ $TEST_TARGET"
          fi
          if [[ ${{ contains(steps.label-the-PR.outputs.all-labels, 'Geti-Utils') }} ]]; then
            export TEST_TARGET="tests/pre-merge/integration/utils/ $TEST_TARGET"
          fi

      - name: Checkout repository
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
        with:
          lfs: true

      - name: Set up Python
        uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4.7.1
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install package with dev requirements
        run: |
          python -m pip install --upgrade pip
          python -m pip install virtualenv
          python -m virtualenv $VIRTUALENV_DIRECTORY
          source $VIRTUALENV_DIRECTORY/bin/activate
          pip install ".[dev]"

      - name: Record integration test cassettes [legacy platform]
        # Proxy settings have to be configured and GETI_HOST set to full address before
        # tests can run
        # NOTE: This step executes all tests in the `tests` directory in `RECORD` mode
        run: |
          source $VIRTUALENV_DIRECTORY/bin/activate
          export no_proxy=$GETI_HOST,$no_proxy
          export NO_PROXY=$GETI_HOST,$NO_PROXY
          export GETI_HOST=https://$GETI_HOST

          pytest $TEST_TARGET --html=$REPORT_DIRECTORY/integration_test_report_legacy.html --self-contained-html
        env:
          # Login details for the Geti instance to run the tests against
          # Secrets are configured on the repository level (Settings > Secrets)
          GETI_HOST: ${{ secrets.GETI_HOST }}
          GETI_PLATFORM_VERSION: "LEGACY"

      - name: Record integration test cassettes [develop platform]
        # Proxy settings have to be configured and GETI_HOST set to full address before
        # tests can run
        # NOTE: This step executes all tests in the `tests` directory in `RECORD` mode
        run: |
          source $VIRTUALENV_DIRECTORY/bin/activate
          export no_proxy=$GETI_HOST,$no_proxy
          export NO_PROXY=$GETI_HOST,$NO_PROXY
          export GETI_HOST=https://$GETI_HOST

          pytest $TEST_TARGET --html=$REPORT_DIRECTORY/integration_test_report_develop.html --self-contained-html
        env:
          # Login details for the Geti instance to run the tests against
          # Secrets are configured on the repository level (Settings > Secrets)
          GETI_HOST: ${{ secrets.GETI_DEVELOP_HOST }}
          GETI_PLATFORM_VERSION: "DEVELOP"

      - name: Commit files
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add tests/fixtures/cassettes
          git commit -m "Update VCR cassette"
          git fetch

      - name: Push changes
        uses: ad-m/github-push-action@9870d48124da805820c70ebc6ba563c715551019 # master
        with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            branch: ${{ github.ref }}

      - name: Upload test reports
        # Publish the test reports to GitHub
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        if: ${{ always() }}
        with:
          name: test-reports
          path: ${{ env.REPORT_DIRECTORY }}

      - name: Clean up artifact and venv directories
        # Remove temporary report directory
        if: ${{ always() }}
        run: |
          rm -rf $REPORT_DIRECTORY $VIRTUALENV_DIRECTORY
